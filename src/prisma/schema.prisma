//-- Entities

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model patient {
  id        String    @id @unique @default(uuid())
  email     String    @unique
  full_name String
  password  String
  verified  Boolean   @default(false)
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @updatedAt @map("updated_at")
}

model practitioner {
  id              String         @id @unique @default(uuid())
  email           String         @unique
  full_name       String
  password        String
  dob             DateTime
  pob             String
  img_url         String
  digital_address String
  contact         String
  id_type         indentity_card @default(ghana_card)
  status          statuses? @default(pending)
  id_number       String
  qualification   String
  licence_number  String
  specialisations String[]
  hospitals       String[]
  verified        Boolean        @default(false)
  createdAt       DateTime?      @default(now()) @map("created_at")
  updatedAt       DateTime?      @default(now()) @updatedAt @map("updated_at")
}

model specialisation {
  id            String   @id @unique @default(uuid())
  name          String   @unique
  practitioners String[]
  createdAt     DateTime?      @default(now()) @map("created_at")
  updatedAt     DateTime?      @default(now()) @updatedAt @map("updated_at")
}

model hospital {
  id            String   @id @unique @default(uuid())
  name          String   @unique
  practitioners String[]
  createdAt     DateTime?      @default(now()) @map("created_at")
  updatedAt     DateTime?      @default(now()) @updatedAt @map("updated_at")
}

model appointment {
  id                String       @id @unique @default(uuid())
  title             String       @unique
  date              DateTime
  time              DateTime
  practitioner      String       // Store practitioner ID directly as a string
  service           String
  comment           String
  tc                Boolean
  payment_completed Boolean
  status            statuses?    @default(pending)
  expiry            DateTime
  createdAt         DateTime?    @default(now()) @map("created_at")
  updatedAt         DateTime?    @default(now()) @updatedAt @map("updated_at")

  // Define the foreign key constraint
  @@index([practitioner], name: "appointment_practitioner_index")
}



enum statuses {
  approved
  rejected
  pending
}

enum indentity_card {
  ghana_card
  voter_id
  passprt
  driving_license
}


