//-- Entities

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin {
  id           String    @id @unique @default(uuid())
  email        String    @unique
  full_name    String
  password     String
  access_level access?   @default(admin)
  verified     Boolean   @default(false)
  createdAt    DateTime? @default(now()) @map("created_at")
  updatedAt    DateTime? @default(now()) @updatedAt @map("updated_at")
}

model patient {
  id           String        @id @unique @default(uuid())
  email        String        @unique
  full_name    String
  password     String
  verified     Boolean       @default(false)
  access_level access?       @default(patient)
  createdAt    DateTime?     @default(now()) @map("created_at")
  updatedAt    DateTime?     @default(now()) @updatedAt @map("updated_at")
  appointment  appointment[]
}

model practitioner {
  id              String         @id @unique @default(uuid())
  email           String         @unique
  full_name       String
  password        String
  dob             DateTime
  pob             String
  img_url         String
  digital_address String
  contact         String
  id_type         indentity_card @default(ghana_card)
  status          statuses?      @default(pending)
  id_number       String
  qualification   String
  licence_number  String
  specialisations String[]
  hospitals       String[]
  access_level    access?        @default(practitioner)
  verified        Boolean        @default(false)
  createdAt       DateTime?      @default(now()) @map("created_at")
  updatedAt       DateTime?      @default(now()) @updatedAt @map("updated_at")
  appointment     appointment[]
}

model specialisation {
  id        String    @id @unique @default(uuid())
  name      String    @unique
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @updatedAt @map("updated_at")
}

model hospital {
  id        String    @id @unique @default(uuid())
  name      String    @unique
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @updatedAt @map("updated_at")
}

model appointment {
  id                String       @id @unique @default(uuid())
  title             String       @unique
  date              DateTime
  time              DateTime
  practitioner      practitioner @relation(fields: [practitionerId], references: [id])
  practitionerId    String
  patient           patient      @relation(fields: [patientId], references: [id])
  patientId         String
  service           String
  comment           String
  tc                Boolean
  payment_completed Boolean
  status            statuses?    @default(pending)
  expiry            DateTime
  createdAt         DateTime?    @default(now()) @map("created_at")
  updatedAt         DateTime?    @default(now()) @updatedAt @map("updated_at")

  @@index([practitionerId], name: "appointment_practitionerId_index")
  @@index([patientId], name: "appointment_patientId_index")
}

model service {
  id        String    @id @unique @default(uuid())
  name      String    @unique
  price     Float
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @updatedAt @map("updated_at")
}

enum access {
  super_admin
  admin
  patient
  practitioner
}

enum statuses {
  approved
  rejected
  pending
}

enum indentity_card {
  ghana_card
  voter_id
  passport
  driving_license
}
